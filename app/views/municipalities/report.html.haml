=provide :title, @report.muni

%div.container
  %h1
    Housing Needs Assessment for #{@report.muni}, MA
  %div.row
    %div.col-md-10
      %div.visualization#visualization1
      %div.visualization#visualization2
      %div.visualization#visualization3
      %div.visualization#visualization4
      %div.visualization#visualization5
      %div.visualization#visualization6

  %div.row
    %div.col-md-10
      = render partial: 'municipalities/report/topic_area', collection: @report.topic_areas
    
      %hr   
      %h2
        Export
      %p
        Export the #{@report.muni} Housing Needs Assessment to Word.

      %a.btn.btn-lg.btn-primary{href: export_municipality_path(@report.muni)}
        Export to Word (.docx)

      %a.btn.btn-lg.btn-success{id: "export"}
        Export charts to images (.zip)

    = render partial: 'scrollspy/scrollspy', locals: { content: @report, export: true }



:javascript 
  $.getJSON('#{@report.json_path}', function(d) {

    var data = d;

    var select = $.grep(data.municipality.fields, function(n,i) {
      return ( n.title == "pop00_2034")
    });

    var TYPES = ['pop_projections_by_age', 'another'];

    function get_data_for(chart_title) {
      
      if (chart_title == 'pop_projections_by_age') {

        var query = [ "pop00_5_19",
                      "pop10_5_19",
                      "pop20_5_19",
                      "pop30_5_19",
                      "pop00_2034",
                      "pop10_2034",
                      "pop20_2034",
                      "pop30_2034",
                      "pop00_3564",
                      "pop10_3564",
                      "pop20_3564",
                      "pop30_3564",
                      "pop00_65p",
                      "pop10_65p",
                      "pop20_65p",
                      "pop30_65p" ];

        var years = [ "2000", "2010", "2020", "2030" ]
        var output = [];

        

        var returnedColumns = data.municipality.fields.filter(function(d) {
          return query.indexOf(d.title) !== -1
        });

        years.forEach(function(year) {
          var values = [];

          var findTheseYears = returnedColumns.filter(function(column) {
            return column.alias.indexOf(year) !== -1
          });

          findTheseYears = findTheseYears.map(function(d) {
            var stripAlias = d.alias.replace(", " + year, "");
            return { name: stripAlias, value: d.value }
          })

          output.push({ series: year, values: findTheseYears })
        });

        return output;
      }

      if (chart_title == 'housing_projections_by_age') {

        var query = [ "hh10_1529",
                      "hh10_3044",
                      "hh10_4559",
                      "hh10_6074",
                      "hh10_75pl",
                      "hh20_1529",
                      "hh20_3044",
                      "hh20_4559",
                      "hh20_6074",
                      "hh20_75pl",
                      "hh30_1529",
                      "hh30_3044",
                      "hh30_4559",
                      "hh30_6074",
                      "hh30_75pl" ];

        var years = [ "2010", "2020", "2030" ]
        var output = [];

        var returnedColumns = data.municipality.fields.filter(function(d) {
          return query.indexOf(d.title) !== -1
        });

        var output = [];

        years.forEach(function(year) {
          var values = [];

          var findTheseYears = returnedColumns.filter(function(column) {
            return column.alias.indexOf(year) !== -1
          });

          findTheseYears = findTheseYears.map(function(d) {
            var stripAlias = d.alias.replace(", " + year, "");
            return { name: stripAlias, value: d.value }
          })

          output.push({ series: year, values: findTheseYears })
        });

        return output;
      }

      if (chart_title == 'housing_demand_by_age_group') {

        var query = [ "sfr1534_20",
                      "sfo1534_20",
                      "mfr1534_20",
                      "mfo1534_20",
                      "sfr3554_20",
                      "sfo3554_20",
                      "mfr3554_20",
                      "mfo3554_20",
                      "sfr5574_20",
                      "sfo5574_20",
                      "mfr5574_20",
                      "mfo5574_20"];

        var ageGroups = [ "15-34", "35-54", "55-74" ]
        var output = [];

        var returnedColumns = data.municipality.fields.filter(function(d) {
          return query.indexOf(d.title) !== -1
        });

        var output = [];

        ageGroups.forEach(function(group) {
          var values = [];

          var findTheseGroups = returnedColumns.filter(function(column) {
            return column.alias.indexOf(group) !== -1
          });

          findTheseGroups = findTheseGroups.map(function(d) {
            var stripAlias = d.alias.replace(" for Ages " + group, "");
            return { name: stripAlias, value: d.value }
          })

          output.push({ series: group, values: findTheseGroups })
        });

        return output;
      }

      if (chart_title == 'percent_subsidized_housing') {

        var query = [ "shi_p" ];
        var geographies = [ "municipality", "state", "region" ]
        var ageGroups = [ "15-34", "35-54", "55-74" ]
        var output = [];
        var returnedColumns = data.municipality.fields.filter(function(d) {
          return query.indexOf(d.title) !== -1
        });

        var output = [];

        ageGroups.forEach(function(group) {
          var values = [];

          var findTheseGroups = returnedColumns.filter(function(column) {
            return column.alias.indexOf(group) !== -1
          });

          findTheseGroups = findTheseGroups.map(function(d) {
            var stripAlias = d.alias.replace(" for Ages " + group, "");
            return { name: stripAlias, value: d.value }
          })

          output.push({ series: group, values: findTheseGroups })
        });

        return output;
      }

      if (chart_title == 'cost_burden_by_income') {

        var query = [ "eli_cbp",
                      "vli_cbp",
                      "li_cbp",
                      "mod_cbp",
                      "hi_cbp" ];

        var output = [];

        var returnedColumns = data.municipality.fields.filter(function(d) {
          return query.indexOf(d.title) !== -1
        });

        returnedColumns.forEach(function(field) {
          var stripAlias = field.alias.replace(" that are cost burdened", "");
          stripAlias = stripAlias.replace("% Households with income ", "");
          // stripAlias = stripAlias.replace("")
          output.push({name: stripAlias, value: field.value });
        });

        return output;
      }

      if (chart_title == 'subsidized_housing_inventory') {

        var query = [ "shi_p" ];

        var output = [];

        var returnedMuni = data.municipality.fields.filter(function(d) {
          return query.indexOf(d.title) !== -1
        });

        var returnedNeighbors = data.neighbors.fields.filter(function(d) {
          return query.indexOf(d.title) !== -1
        });

        output.push({
          name: returnedMuni[0].alias + ", " + data.municipality.name,
          value: returnedMuni[0].value
        },
        {
          name: returnedNeighbors[0].alias + ", neighboring cities",
          value: returnedNeighbors[0].value
        });
        
        return output;
      }

      if (chart_title = "housing_affordability") {
        var query = [ "hhinc10k",
                      "hhinc20k",
                      "hhinc30k",
                      "hhinc40k",
                      "hhinc50k",
                      "hhinc60k",
                      "hhinc70k",
                      "hhinc80k",
                      "hhinc90k",
                      "hhinc100k",
                      "hhinc120k" ]; 

        var output = [];

        var returnedColumns = data.municipality.fields.filter(function(d) {
          return query.indexOf(d.title) !== -1
        });

        var values = [];

        returnedColumns.forEach(function(field) {

          var stripAlias = field.alias.replace("% of single family homes sold since 2000 that were affordable to households with an incomes of ", "");

          stripAlias = stripAlias.replace(".", "")

          output.push({year: stripAlias.toString(), value: field.value });

        });

        values.push({ series: "Housing Affordability", values: output })

        return values;

      }
    }

    var chart = d3.select('#visualization1')
      .append('svg')
      .chart('GroupedBarChart')
      .width(300)
      .height(300)
      .yAxisLabel("Percent")
      .colors(['#F37B70', '#1C164E', '#1F77B4', '#00AFB2']);

    chart.draw(get_data_for('pop_projections_by_age'));

    var chart = d3.select('#visualization2')
      .append('svg')
      .chart('GroupedBarChart')
      .width(300)
      .height(300)
      .yAxisLabel("Percent")
      .colors(['#F37B70', '#1C164E', '#1F77B4', '#00AFB2']);

    chart.draw(get_data_for('housing_projections_by_age'));

    var chart = d3.select('#visualization3')
      .append('svg')
      .chart('GroupedBarChart')
      .width(300)
      .height(300)
      .yAxisLabel("Percent")
      .colors(['#F37B70', '#1C164E', '#1F77B4', '#00AFB2']);

    chart.draw(get_data_for('housing_demand_by_age_group'));

    var chart = d3.select('#visualization4')
      .append('svg')
      .chart('BarChart')
      .width(300)
      .height(300)
      .yAxisLabel("Percent")
      .colors(['#F37B70', '#1C164E', '#1F77B4', '#00AFB2']);

    chart.draw(get_data_for('cost_burden_by_income'));

    var chart = d3.select('#visualization5')
      .append('svg')
      .chart('BarChart')
      .width(300)
      .height(300)
      .yAxisLabel("Percent")
      .colors(['#F37B70', '#1C164E', '#1F77B4', '#00AFB2']);

    chart.draw(get_data_for('subsidized_housing_inventory'));

    var chart = d3.select('#visualization6')
      .append('svg')
      .chart('LineChart')
      .width(600)
      .height(300)
      .colors(['#F37B70', '#1C164E', '#1F77B4', '#00AFB2']);

    chart.draw(get_data_for('housing_affordability'));
    

    var saveImages = function(callback) {
      var zip = new JSZip();
      var img = zip.folder("images");

      console.log("1");

      $("svg").each(function(index, svg) {
        var simg = new Simg(svg);
        console.log("2");
        simg.toImg(function(image) {
          console.log("3");
          var filedata = Simg.getBase64Image(image);
          var filename = "chart-" + index + ".png"
          img.file(filename, filedata, {base64: true})
        });

      });

      setTimeout(function(){
        console.log("4");
        if(callback) callback(zip);
      }, 500);
      
    }

    var saveZip = function(zip) {
      console.log("5");
      var content = zip.generate({type:"blob"});
      saveAs(content, "example.zip");
    }

    // log("7");

    var downloadSvgs = function () {
      console.log("6");
      saveImages(function(zip) {
        console.log("7");
        saveZip(zip);
      });
    }

    $("#export").on("click", function() {
      console.log("8");
      downloadSvgs();
    });
  });


  